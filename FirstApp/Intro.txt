web.xml -> Deployment Descriptor file

Web Terminology:

Static Website : server(set of pages (preloaded)) -> client

Dynamic Website : server -> database(s) -> client

Servlet API : package -> javax.servlet
Interfaces: Servlet, ServletRequest, ServletResponse, etc.


Methods of Servlet Interface: 

> init				-> Initialize the servlet.
> service			-> provides reponse for the incoming request.
> destroy			-> invoked only once and to indicate that the servlet is being destroyed.
> getservletconfig	-> returns the object of servletconfig.
> getservletinfo	-> returns information about servlet such as writer, copywrite, version, etc.


Servlet Life Cycle: 

1. Servlet class is loaded.
2. Servlet instance is created.
3. Init method invoked. (servlet initialize)
4. Service method invoked. (servlet run)
5. Destroy method invoked. (servlet objects will be destroyed)

Request Dispatcher: (interface)
> It provides the facility of dispatching the request to another resource it may be html, servlet or jsp.

There are 2 methods to dispatch the servlet: 1. forward()	2. include()

Servlet Topics:

0. Servlet Life Cycle
1. Generic, HTTP Servlet
2. ServletRequest
3. Servlet Collaboration:
	> RequestDispatcher: forward() / include()
	> sendRedirect()
4. ServletConfig(interface): An object made by the web container for each servlet.
> it contains config files that relates to the web.xml.
> if we change some configurations in web.xml then the changes will be done automatically in the servlet using servletconfig object.

5. ServletContext

6. Attribute in Servlet: they are objects that can be set, get and removed from one fo the following scopes:
	1. request Scope
	2. session Scope
	3. application Scope
	
Methods of ServletRequest, HttpSession and ServletContext interface.

1. public void setAttribute(String name, Object object): sets the given object in the application scope.
2. public Object getAttributes(String name): Returns the attribute for the specified name.
3. public Enumeration getInitParameterNames(): returns the names of all context initialized parameters.
4. public void removeAttribute(String name): Removes the attribute with the given name from context.
--------------------------------------------------------------------------------------------------------

Session Tracking in Servlets:

Session means specific interval of time

Session Tracking is a way to maintain state(data) of an user. also known as Session Management.

used to recognize the users

4 types of session tracking techniques:

1. Cookies: small piece of information that is persisted between the multiple client request
> a cookie has a name, a value, optional attrs like max age, path, version, etc.

2. Hidden Form Fields
> here, we will add a hidden textfield to maintain the state of the user

3. URL rewriting: we append a token or identifier to the url of the next servlet or the next resource.
format:
	url?name1=value1&name2=value2&??

4. HttpSession (interface)


Events and Listener: ex: HTTPSESSION






































